
@model RegisterVM

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}
@section style{
    <style>
        label{
            position:static;
        }
    </style>
}
<!-- Sign up form -->
<section class="signup">
    <div class="container">
        <div class="signup-content">
            <div class="signup-form">
                <h2 class="form-title">Sign up</h2>
                <form method="POST" class="register-form" id="register-form" enctype="multipart/form-data" onsubmit="event.preventDefault(); registerUser();">
                    <div class="form-group">
                        <label asp-for="UserName"></label>
                        <input asp-for="UserName" placeholder="Enter your UserName  " />
                        <span asp-validation-for="UserName" class="text-danger" ></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email"></label>
                        <input asp-for="Email" placeholder="Your Email" />
                        <span asp-validation-for="Email" class="text-danger"></span>

                    </div>
                    <div class="form-group">
                        <label asp-for="Password"></label>
                        <input asp-for="Password" placeholder="Password" />
                        <span asp-validation-for="Password" class="text-danger"></span>

                    </div>
                    <div class="form-group">
                        <label asp-for="ConfirmPassword"></label>
                        <input asp-for="ConfirmPassword" placeholder="Repeat your password" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>

                    </div>
                      <div class="form-group">
                        <label asp-for="PhoneNumber"></label>
                        <input asp-for="PhoneNumber" placeholder="Enter phone number" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>

                    </div>
                    <div class="form-group">
                        <label asp-for="Address"></label>
                        <input asp-for="Address" placeholder="Enter Address" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Image">Upload Image:</label>
                        <input asp-for="Image"class=" imageInput form-control-file" />
                    </div>
                  
                    <div class="form-group">
                        <img src="#" id="imagePreview" width="50" style="display:none" alt="this is image service" />
                    </div>

                    <div class="form-group">
                        <input type="checkbox" name="agree-term" id="agree-term" class="agree-term" />
                        <label for="agree-term" class="label-agree-term"><span><span></span></span>I agree all statements in  <a href="#" class="term-service">Terms of service</a></label>
                    </div>
                    <div class="form-group form-button">
                        <input type="submit" name="signup" id="signup" class="form-submit" value="Register" />
                    </div>
                </form>
            </div>
            <div class="signup-image">
                <figure><img src="~/Form/images/signup-image.jpg" alt="sing up image"></figure>
                <a asp-action="Login" asp-controller="Account" class="signup-image-link">I am already member</a>
            </div>
        </div>
    </div>
</section>

@section script {
    <script src="https://cdn.tiny.cloud/1/6flbm5mj6i3yf3fgi2p9ij1bsfnjsu15kmtzer7qs3vfeq43/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
       
        document.querySelector(".imageInput").addEventListener("change", (event) => {
            const file = event.target.files[0];
            const imagePreview = document.querySelector("#imagePreview");

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = "block";
                }
                reader.readAsDataURL(file);
            }
        });
        function registerUser() {
            const data = {
                UserName: document.getElementById('UserName').value,
                Email: document.getElementById('Email').value,
                Address: document.getElementById('Address').value,
                PhoneNumber: document.getElementById('PhoneNumber').value,
                Password: document.getElementById('Password').value,
                ConfirmPassword: document.getElementById('ConfirmPassword').value,
            };

            const formData = new FormData();
            for (const key in data) {
                formData.append(key, data[key]);
            }

            const imageInput = document.getElementById('Image'); // Assuming you have an input for the image
            if (imageInput.files.length > 0) {
                formData.append('Image', imageInput.files[0]); // Append the file if it exists
            }

            fetch('/Account/Register', {
                method: 'POST',
                body: formData,
               
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: data.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '/Account/Login'; // Redirect to login after confirming
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: data.message,
                            icon: 'error',
                            confirmButtonText: 'Try Again'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An unexpected error occurred.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        }
    </script>
}

